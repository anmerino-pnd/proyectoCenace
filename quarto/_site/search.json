[
  {
    "objectID": "2_comprension_datos.html",
    "href": "2_comprension_datos.html",
    "title": "Comprensión de los datos",
    "section": "",
    "text": "La fuente principal de información son, los documentos de información (manuales, guías, contratos, etc.) y la base de datos que contiene todos los incidentes resueltos por parte de la gerencia Noroeste del CENACE. Además, se nos compartieron 4 archivos pdf para crear una base de datos vectorial con ellos. Los incidentes resueltos fueron extraídos de SQL y trabajados en formato csv.\n\n\n\nEn una primera instancia, se realizó una Exploración de Datos (EDA) sobre un conjunto de 175 incidentes correspondientes al período de enero de 2023 a mayo de 2024. Este conjunto incluía 14 variables, como título, descripción, categoría, solución, entre otras. Se utilizará el título y la descripción para sugerir la categoría de un incidente.\nAunque se obtuvieron hallazgos interesantes, este EDA evidenció la necesidad de hacer una análisis con más datos y abordar inconsistencias presentes en los registros analizados.\n\n\n\nPara ampliar la cantidad de datos disponibles, fue necesario realizar un proceso de codificación y anonimización. Esto fue para garantizar la protección de información sensible, como nombres de personal, números telefónicos, correos electrónicos, normas, y nombres de subestaciones, entre otros.\nCon herramientas como expresiones regulares y SpaCy, se logró recuperar un total de 2,748 registros, es decir, 15 veces más registros que los disponibles al inicio."
  },
  {
    "objectID": "2_comprension_datos.html#recolección-de-los-datos",
    "href": "2_comprension_datos.html#recolección-de-los-datos",
    "title": "Comprensión de los datos",
    "section": "",
    "text": "La fuente principal de información son, los documentos de información (manuales, guías, contratos, etc.) y la base de datos que contiene todos los incidentes resueltos por parte de la gerencia Noroeste del CENACE. Además, se nos compartieron 4 archivos pdf para crear una base de datos vectorial con ellos. Los incidentes resueltos fueron extraídos de SQL y trabajados en formato csv.\n\n\n\nEn una primera instancia, se realizó una Exploración de Datos (EDA) sobre un conjunto de 175 incidentes correspondientes al período de enero de 2023 a mayo de 2024. Este conjunto incluía 14 variables, como título, descripción, categoría, solución, entre otras. Se utilizará el título y la descripción para sugerir la categoría de un incidente.\nAunque se obtuvieron hallazgos interesantes, este EDA evidenció la necesidad de hacer una análisis con más datos y abordar inconsistencias presentes en los registros analizados.\n\n\n\nPara ampliar la cantidad de datos disponibles, fue necesario realizar un proceso de codificación y anonimización. Esto fue para garantizar la protección de información sensible, como nombres de personal, números telefónicos, correos electrónicos, normas, y nombres de subestaciones, entre otros.\nCon herramientas como expresiones regulares y SpaCy, se logró recuperar un total de 2,748 registros, es decir, 15 veces más registros que los disponibles al inicio."
  },
  {
    "objectID": "2_comprension_datos.html#análisis-exploratorio-de-los-datos",
    "href": "2_comprension_datos.html#análisis-exploratorio-de-los-datos",
    "title": "Comprensión de los datos",
    "section": "0.2 Análisis exploratorio de los datos",
    "text": "0.2 Análisis exploratorio de los datos\nSe debe realizar un análisis para entender la estructura y el contenido de la documentación. Esto incluye:\nFormatos de los archivos: Identificar los tipos de archivo (PDF, DOCX, TXT, etc.).\nTamaño de los documentos: Analizar la extensión de los documentos para planear la estrategia de fragmentación (chunking).\nContenido: Realizar un análisis preliminar del contenido, identificando términos clave, acrónimos, y la densidad de información técnica."
  },
  {
    "objectID": "6_documentacion.html",
    "href": "6_documentacion.html",
    "title": "Documentación",
    "section": "",
    "text": "1 Manual de instalación y despliegue 1.1 Configuraciones importantes El proyecto está diseñado para ser desplegado en entornos Linux o Windows con Python 3.12.9. Requiere acceso a Ollama (para la ejecución de modelos open-source), así como conectividad a una instancia de MongoDB para el registro del historial de conversaciones y tickets.\nLa aplicación backend se expone a través de FastAPI en el puerto 8000. Es crucial asegurar que este puerto esté abierto y accesible en el entorno de despliegue.\nTodas las credenciales y configuraciones sensibles se gestionan mediante un archivo de variables de entorno (.env), garantizando la seguridad y facilidad de configuración.\n1.2 Requisitos del sistema Python: Versión 3.12.9\nPip: Última versión\nUV: Última versión (gestor de paquetes y entornos)\nOllama: Instalado y en ejecución en el servidor para el hosting de modelos open-source.\nMongoDB: Acceso remoto configurado para las colecciones de historial de conversaciones y tickets.\n1.3 Pasos para el despliegue Clonar el repositorio: git clone \nConfigurar el entorno: uv venv .venv uv pip install -e .\nConfigurar Ollama: Asegurarse de que Ollama esté instalado y corriendo en el servidor. Descargar el modelo requerido, por ejemplo: ollama pull gemma3:4b\nConfigurar variables de entorno: Crear el archivo .env con las variables necesarias para la conexión a MongoDB y la configuración de Ollama.\nEjecutar la API: uvicorn main:app –reload\n2 Guía de uso El sistema está diseñado para ser utilizado por ingenieros del CENACE a través de una interfaz de usuario (frontend) que se conecta a la API de FastAPI. Los ingenieros pueden interactuar con el chatbot haciendo preguntas técnicas. El sistema recuperará información relevante de la base de conocimientos y generará respuestas para ayudar en la toma de decisiones.\n3 Arquitectura del sistema 3.1 Componentes principales Interfaz de Usuario (UI): Un widget o aplicación web que permite a los ingenieros interactuar con el chatbot.\nAPI del Chatbot (FastAPI): La aplicación de backend que maneja las solicitudes de la UI. Orquesta las interacciones con los modelos de lenguaje y la base de datos.\nMódulo de Recuperación Aumentada por Generación (RAG): Procesa las consultas del usuario, recupera información relevante de la base de conocimientos y la utiliza para generar respuestas.\nBase de Datos Vectorial (FAISS): Almacena los embeddings de la documentación técnica del CENACE para una búsqueda semántica eficiente.\nBase de Conocimientos (MongoDB): Contiene los documentos originales del CENACE, el historial de conversaciones, y los tickets generados.\nModelo de Lenguaje Grande (LLM): Un modelo open-source (ej. gemma3:4b) alojado en Ollama, responsable de generar las respuestas finales.\n3.2 Flujo de la interacción El ingeniero realiza una consulta a través del widget en la página web.\nLa consulta se envía a la API del chatbot.\nLa API crea o continúa una sesión de conversación y la consulta se procesa por el módulo RAG.\nEl módulo RAG realiza una búsqueda en la base de datos vectorial para encontrar los fragmentos de documentos más relevantes.\nLos fragmentos recuperados se combinan con la consulta del usuario y se envían al LLM para generar una respuesta al usuario.\nTodas las interacciones se registran en la base de datos de MongoDB para análisis futuros.\n3.3 Flujo de datos La documentación técnica se procesa a través de un módulo ETL, que extrae los datos, los divide en fragmentos (chunks), y los convierte en embeddings.\nEstos embeddings se cargan en la base de datos vectorial (FAISS).\nLa documentación original también se almacena en MongoDB.\nLas interacciones de los usuarios se guardan en MongoDB.\n\n\n\n\n Back to top"
  },
  {
    "objectID": "4_modelado.html",
    "href": "4_modelado.html",
    "title": "Modelado y Evaluación",
    "section": "",
    "text": "1 Modelado El objetivo de esta fase es desarrollar la arquitectura del sistema de recuperación aumentada con generación (RAG) y las herramientas que utilizará el chatbot para interactuar con la base de conocimientos. Para ello, se utiliza como fuente de conocimiento la base de datos vectorizada construida en la etapa de preparación de los datos.\n1.1 Modelos Dado que el enfoque del proyecto se basa en el uso de modelos de lenguaje grandes (open-source) alojados localmente, los modelos considerados para esta fase son los siguientes:\nModelos open-source integrados mediante Ollama: Ollama permite correr modelos de lenguaje open-source de manera local o privada. En este proyecto se contempla el modelo gemma3:4b, que ofrece un buen rendimiento en tareas conversacionales, manteniendo la privacidad de la información sensible del CENACE. Este modelo es de código abierto y no requiere una API externa, lo que se alinea con la necesidad de mantener el control sobre los datos.\nModelos de embeddings: Se utiliza un modelo de embeddings como bge-m3:latest (también disponible en Ollama) para convertir los fragmentos de la documentación en vectores numéricos, lo que permite una búsqueda semántica eficiente en la base de datos vectorial.\n1.2 Arquitectura del sistema El sistema se basa en una arquitectura de Recuperación Aumentada por Generación (RAG). Cuando un usuario envía una consulta, el sistema realiza los siguientes pasos:\nLa consulta se convierte en un vector.\nSe realiza una búsqueda de similitud en la base de datos vectorial (FAISS) para encontrar los fragmentos de documentos más relevantes.\nEstos fragmentos, junto con la consulta del usuario, se envían al LLM (gemma3:4b) alojado en Ollama.\nEl LLM utiliza el contexto proporcionado para generar una respuesta coherente y precisa que es devuelta al usuario.\n\n\n2 Evaluación La fase de evaluación es crucial para validar el desempeño del sistema y asegurar que cumple con los objetivos del proyecto. La evaluación se realiza a través de pruebas manuales y automatizadas.\n2.1 Criterios de evaluación Precisión: ¿Las respuestas generadas por el chatbot son técnicamente correctas y se basan en la documentación del CENACE?\nRelevancia: ¿Los fragmentos de documentos recuperados son relevantes para la consulta del usuario?\nCoherencia: ¿Las respuestas son coherentes y mantienen el hilo de la conversación?\nTiempo de respuesta: ¿El sistema responde de manera oportuna para ser una herramienta de apoyo efectiva para los ingenieros?\nUsabilidad: ¿La interfaz de usuario es intuitiva y el sistema es fácil de usar para los ingenieros del CENACE?\n\n\n\n\n Back to top"
  },
  {
    "objectID": "1_comprension.html",
    "href": "1_comprension.html",
    "title": "Comprensión del negocio",
    "section": "",
    "text": "El Centro Nacional de Control de Energía (CENACE) es el organismo encargado de la planeación y el control operativo del Sistema Eléctrico Nacional (SEN). El CENACE cuenta con una mesa de ayuda (Help Desk), la cual provee soporte y le da seguimiento a incidentes reportados en todo el país. En este trabajo nos restringimos a los incidentes reportados para la zona noroeste, la cual se conforma de los estados de Sonora y Sinaloa. Los incidentes se reportan en formato de tickets y son gestionados por los ingenieros de la organización.\nTeniendo en cuenta la naturaleza crítica del sector energético, la constante evolución tecnológica y la gran cantidad de documentación técnica existente, surge la necesidad de optimizar el acceso a la información. La búsqueda manual de esta información para resolver incidentes puede ser un proceso lento, impactando la eficiencia operativa. Además de aprovechar la base de conocimientos que ya se tiene para proponer soluciones a problemas previamente vistos."
  },
  {
    "objectID": "1_comprension.html#propuesta-de-solución",
    "href": "1_comprension.html#propuesta-de-solución",
    "title": "Comprensión del negocio",
    "section": "0.1 Propuesta de solución",
    "text": "0.1 Propuesta de solución\nProponemos desarrollar un sistema de Help Desk inteligente basado en Inteligencia Artificial Generativa que utilice la metodología de Recuperación Aumentada por Generación (RAG) y modelos de lenguaje grandes (LLM). Este sistema actuará como una herramienta de apoyo para los ingenieros, proporcionando respuestas inmediatas a sus consultas técnicas. El sistema permitirá una clasificación y recuperación de información más eficiente, y generará respuestas contextualizadas a partir de la base de conocimientos interna del CENACE."
  },
  {
    "objectID": "1_comprension.html#objetivos",
    "href": "1_comprension.html#objetivos",
    "title": "Comprensión del negocio",
    "section": "0.2 Objetivos",
    "text": "0.2 Objetivos\nEl objetivo principal es elaborar un sistema de Help Desk que utilice la base de conocimientos del CENACE y modelos de lenguaje grande para que los ingenieros tengan apoyo inmediato y puedan tomar decisiones rápidas al alcance de la mano. Con esto, se espera ahorrar tiempo en la clasificación, recuperación y generación de la información técnica, y a su vez, nutrir la base de conocimientos con las soluciones generadas."
  },
  {
    "objectID": "1_comprension.html#terminología",
    "href": "1_comprension.html#terminología",
    "title": "Comprensión del negocio",
    "section": "0.3 Terminología",
    "text": "0.3 Terminología\n\nRAG (Retrieval-Augmented Generation): Un enfoque de IA que combina la recuperación de información con la generación de lenguaje, para crear respuestas más precisas y contextualizadas.\nLLM (Large Language Model): Modelo de lenguaje grande capaz de comprender y generar texto similar al humano, como el modelo gemma3:4b que se utilizará en el proyecto.\nOllama: Un framework que permite ejecutar modelos de lenguaje grandes de código abierto de forma local.\nVector Embeddings: Representaciones numéricas de texto que capturan su significado semántico, facilitando la búsqueda de información similar.\nBase de datos vectorial: Una base de datos optimizada para almacenar y buscar vector embeddings.\nFastAPI: Un framework web de Python de alto rendimiento para construir APIs.\nMongoDB: Una base de datos NoSQL que se utilizará para almacenar el historial de conversaciones, tickets y la documentación original."
  },
  {
    "objectID": "1_comprension.html#beneficios",
    "href": "1_comprension.html#beneficios",
    "title": "Comprensión del negocio",
    "section": "0.4 Beneficios",
    "text": "0.4 Beneficios\n\nInnovación en el soporte técnico: Introducir un nuevo enfoque para acceder a la información técnica, brindando una experiencia más personalizada y eficiente para los ingenieros.\nOptimización del flujo de trabajo: El sistema permitirá a los ingenieros ahorrar tiempo en la búsqueda de información, lo que se traducirá en una mayor eficiencia operativa y una toma de decisiones más rápida.\nPreservación del conocimiento: El sistema ayuda a estructurar y hacer accesible la vasta base de conocimientos del CENACE, garantizando que el conocimiento institucional no se pierda.\nClasificación y sugerencia automática: El sistema puede ayudar a clasificar los tickets de incidentes y sugerir soluciones, lo que agiliza el proceso de resolución."
  },
  {
    "objectID": "1_comprension.html#costos",
    "href": "1_comprension.html#costos",
    "title": "Comprensión del negocio",
    "section": "0.5 Costos",
    "text": "0.5 Costos\n\nTiempo: El proyecto tiene un plazo estimado para desarrollar una versión funcional que pueda ser evaluada y mejorada.\nFinancieros: Aunque se utilizan modelos y herramientas de código abierto, se consideran costos asociados al hardware necesario para ejecutar los modelos de manera local (servidores, etc.)."
  },
  {
    "objectID": "0_home.html",
    "href": "0_home.html",
    "title": "Desarrollo de un help desk basado en un modelo de lenguaje grande",
    "section": "",
    "text": "Este proyecto se centra en la elaboración de un sistema inteligente incorporado al sistema de seguimiento de incidentes de la mesa de ayuda (Help Desk) del Centro Nacional de Control de Energía (CENACE). Utilizando manuales, guías de procedimientos y la base de conocimientos de la organización, el sistema incorpora modelos grandes de lenguaje (LLMs) y técnicas de procesamiento de lenguaje natural (PLN) para la clasificación de incidentes, recuperación de información relevante y generación de soluciones sugeridas. Este sistema no solo proveerá apoyo inmediato a los ingenieros del CENACE, sino que también nutrirá la base de conocimientos implementada con las soluciones generadas.\nEl proyecto está estructurado en las siguientes fases, siguiendo el ciclo CRISP-DM:\n\nComprensión del Negocio: Definición del problema, el contexto de la mesa de ayuda del CENACE, y los objetivos específicos del proyecto.\nComprensión de los Datos: Recolección y análisis preliminar de la documentación técnica disponible y de los tickets de incidentes históricos.\nPreparación de los Datos: Limpieza, transformación y estructuración de los documentos técnicos y datos de tickets para su posterior uso en el sistema RAG y la base de datos vectorial.\nDesarrollo del Sistema de Help Desk: Implementación del chatbot y la arquitectura de RAG que utilizará el LLM para interpretar las consultas y generar respuestas basadas en la base de conocimientos.\nEvaluación: Validación de la precisión y relevancia de las respuestas generadas por el sistema, asegurando su utilidad para los ingenieros en su trabajo diario.\nImplementación: Despliegue del sistema de Help Desk en un entorno de pruebas del CENACE y posterior integración en el flujo de trabajo de los ingenieros.\n\nA través de estas fases, se busca proporcionar una solución innovadora que mejore la interacción con la información técnica del CENACE, optimizando el flujo de trabajo de los ingenieros y facilitando una toma de decisiones más rápida y precisa, particularmente en la zona noroeste del país (Sonora y Sinaloa), donde el proyecto se ha enfocado inicialmente."
  },
  {
    "objectID": "0_home.html#introducción",
    "href": "0_home.html#introducción",
    "title": "Desarrollo de un help desk basado en un modelo de lenguaje grande",
    "section": "",
    "text": "Este proyecto se centra en la elaboración de un sistema inteligente incorporado al sistema de seguimiento de incidentes de la mesa de ayuda (Help Desk) del Centro Nacional de Control de Energía (CENACE). Utilizando manuales, guías de procedimientos y la base de conocimientos de la organización, el sistema incorpora modelos grandes de lenguaje (LLMs) y técnicas de procesamiento de lenguaje natural (PLN) para la clasificación de incidentes, recuperación de información relevante y generación de soluciones sugeridas. Este sistema no solo proveerá apoyo inmediato a los ingenieros del CENACE, sino que también nutrirá la base de conocimientos implementada con las soluciones generadas.\nEl proyecto está estructurado en las siguientes fases, siguiendo el ciclo CRISP-DM:\n\nComprensión del Negocio: Definición del problema, el contexto de la mesa de ayuda del CENACE, y los objetivos específicos del proyecto.\nComprensión de los Datos: Recolección y análisis preliminar de la documentación técnica disponible y de los tickets de incidentes históricos.\nPreparación de los Datos: Limpieza, transformación y estructuración de los documentos técnicos y datos de tickets para su posterior uso en el sistema RAG y la base de datos vectorial.\nDesarrollo del Sistema de Help Desk: Implementación del chatbot y la arquitectura de RAG que utilizará el LLM para interpretar las consultas y generar respuestas basadas en la base de conocimientos.\nEvaluación: Validación de la precisión y relevancia de las respuestas generadas por el sistema, asegurando su utilidad para los ingenieros en su trabajo diario.\nImplementación: Despliegue del sistema de Help Desk en un entorno de pruebas del CENACE y posterior integración en el flujo de trabajo de los ingenieros.\n\nA través de estas fases, se busca proporcionar una solución innovadora que mejore la interacción con la información técnica del CENACE, optimizando el flujo de trabajo de los ingenieros y facilitando una toma de decisiones más rápida y precisa, particularmente en la zona noroeste del país (Sonora y Sinaloa), donde el proyecto se ha enfocado inicialmente."
  },
  {
    "objectID": "3_preparacion.html",
    "href": "3_preparacion.html",
    "title": "Preparación de los datos",
    "section": "",
    "text": "Back to top"
  },
  {
    "objectID": "5_despliegue.html",
    "href": "5_despliegue.html",
    "title": "Despliegue",
    "section": "",
    "text": "1 Revisión del proceso El desarrollo del proyecto de Help Desk para el CENACE siguió un enfoque iterativo, basado en los principios del ciclo CRISP-DM. Esta metodología estructurada permitió abordar las distintas fases del proyecto de manera organizada, con un énfasis continuo en la mejora del diseño, la calidad del código y, fundamentalmente, el rendimiento del sistema en sus componentes clave.\nLos principales retos se concentraron en la fase de extracción, manipulación y estructuración de los datos, con el objetivo de mantenerlos lo más tidy posible y así garantizar una mayor precisión y coherencia en las respuestas generadas por el sistema. Además, el manejo de la documentación técnica del CENACE, que a menudo es compleja y extensa, requirió una estrategia robusta de fragmentación (chunking) para optimizar la recuperación de información.\nA lo largo de los ciclos de desarrollo, se han cumplido los hitos establecidos, manteniendo un ritmo de trabajo adecuado; aunque hubo varios cambios, o ajustes, el objetivo sigue siendo el mismo:\nElaborar un sistema de Help Desk que utilice la base de conocimientos del CENACE y modelos de lenguaje grande para que los ingenieros tengan apoyo inmediato y puedan tomar decisiones rápidas al alcance de la mano y con esto ahorrar tiempo en la clasificación, recuperación y generación de la información técnica.\nLa fase de evaluación, aunque continua, ha mostrado un progreso positivo, y ahora nos enfocamos en las etapas finales de despliegue y validación en un entorno real.\n\n\n2.7 Despliegue en el ambiente de desarrollo Una vez que el sistema RAG y la API de FastAPI estuvieron funcionales y probados en un entorno local, se procedió a un despliegue inicial en un ambiente de desarrollo del CENACE. Este paso fue crucial para:\nValidación de la infraestructura: Probar la compatibilidad del sistema con los servidores y la red interna del CENACE.\nPruebas de integración: Verificar que la API de FastAPI, el servidor de Ollama, y la base de datos de MongoDB se comunicaran correctamente.\nPruebas de concepto: Presentar el chatbot a un grupo reducido de ingenieros para obtener retroalimentación temprana sobre su funcionalidad y utilidad.\nConsideraciones de seguridad: Se aseguraron medidas básicas como la validación de origen en CORS, limitación de rutas expuestas en la API, y uso de HTTPS para todas las comunicaciones entre cliente y servidor.\nEste hito marca un avance significativo hacia la validación en entorno real del sistema conversacional, permitiendo recopilar feedback de usuarios internos antes de considerar un despliegue completo en producción.\n2.8 Despliegue del chatbot en el sistema de producción A partir del despliegue en el ambiente de pruebas, donde recopilamos retroalimentación e hicimos iteraciones sobre el modelo, finalmente pudimos desplegarlo al ambiente de producción. Este despliegue será escalonado, empezando por un grupo de ingenieros piloto para recopilar retroalimentación más apegada a casos de estudio concretos y reales.\n\n\n\n\n Back to top"
  }
]